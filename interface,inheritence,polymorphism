----------------------------------------Abstraction-----------------------------------------------------------------------------------------------

using System;
    abstract class Engine
    {

   
        public abstract void Throttle();
    }


    class V8 : Engine
    {

        public override void Throttle()
        {

            Console.WriteLine("horn2 + 1horn");

        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            V8 D = new V8();
            D.Throttle();

            
        }
    }
-----------------------------------------------------Multiple inheitence--------------------------------------------------------------------------


ï»¿using System;


    public class GeneralMAnager
    {
        public void DisplayGeneralMAnagerGM()
        {
            Console.WriteLine("General manager is head of all managers");
        }
    }

    public class AreaDivisionManagerA :GeneralMAnager
    {
        public void DisplayAreaDivisionManagerA()
        {
            Console.WriteLine("ADM is the Area divisional manager of south india");
        }
    }

    public class RegionalManagerR : GeneralMAnager
    {
        public void DisplayRegionalManagerR()
        {
            Console.WriteLine("RM is the regional manager of chamrajnagar");
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            AreaDivisionManagerA areaDivisionManagerA = new AreaDivisionManagerA(); 
            RegionalManagerR regionalManagerR = new RegionalManagerR();

        areaDivisionManagerA.DisplayAreaDivisionManagerA();
        areaDivisionManagerA.DisplayGeneralMAnagerGM();

        regionalManagerR.DisplayRegionalManagerR();
        regionalManagerR.DisplayGeneralMAnagerGM();
        }
    }
    
    
    -------------------------------------------------Hierarchial inheritance------------------------------------------------------------------------
    
    using System;

public class Group
{
    public string GroupName()
    {
        return "TATA";
    }
}
public class CompanyFirst : Group
{
    public string CompanyName()
    {
        return " TCS";
    }
}
public class CompanySecond : Group
{
    public string CompanyName()
    {
        return "Tata Neo";
    }
}
public class CompanyThrid : Group
{
    public string CompanyName()
    {
        return "Tata Power";
    }
}
class groupist
{
    public static void Main(string[] args)  

    {
        CompanyFirst first = new CompanyFirst();
        Console.WriteLine(first.CompanyName() + "  " + first.GroupName());
        CompanySecond second = new CompanySecond();
        Console.WriteLine(second.CompanyName() + "  " + first.GroupName());
        CompanyThrid third = new CompanyThrid();
        Console.WriteLine(third.CompanyName() + "  " + first.GroupName());

    }
}
    
----------    over-ride,Run time polymorphism---------------------------------------------------------
using System;

public class Espeed
{
    public virtual void setspeed()
    {
        Console.WriteLine("You exceeded 40");
    }
}
    public class Nspeed : Espeed
    {
        public override void setspeed()
        {
            Console.WriteLine("You exceeded 60");

        }
    }
class prgrm
{
    static void Main(string[] args)
    {
        Nspeed nspeed = new Nspeed();
        nspeed.setspeed();
        Espeed espeed = new Espeed();   
        espeed.setspeed();
    }
    -------------------Over-loading,compile time polymorphism--------------------------------------------------------------------
    
    
    
    
    
    using System;



    public class Calculate
    {
        public void MultiplyNumbers(double a, double b)
        {
            Console.WriteLine("a * b = {0}", a * b);
        }
        public void MultiplyNumbers(double a, double b, double c)
        {
            Console.WriteLine("a * b * c = {0}", a * b * c);
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Calculate c = new Calculate();
            c.MultiplyNumbers(15.2, 25.1);
            c.MultiplyNumbers(15.1, 25.6, 37);
           
            
        }
    }
----------------------------------------------------Interface-----------------------------------------------------------------------------------------------------

interface Sim
{
    void call(); void browse();
}
class Airtel : Sim
{
    public void call() { Console.WriteLine("Airtel is calling"); }
    public void browse() { Console.WriteLine("Airtel 4G connecting"); }
}
class Jio : Sim
{
    public void call() { Console.WriteLine("Jio is calling"); }
    public void browse() { Console.WriteLine("Jio 4G connecting"); }
}
class Program
{
    static void Main(String[] args)
    {
        Airtel a = new Airtel(); a.call(); a.browse(); Jio j = new Jio(); j.call(); j.browse();

        Console.ReadLine();
    }
}


    
